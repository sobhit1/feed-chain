name: CD

on:
  push:
    branches:
      - main
      - release/*

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build & Push Docker Image
      - name: Build & Push Docker Image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/feedchain-backend
          IMAGE_TAG=${{ github.sha }}
          docker build -t $IMAGE_NAME:$IMAGE_TAG ./backend
          docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$IMAGE_TAG
          docker push $IMAGE_NAME:latest

      # Step 4: Deploy to Staging via SSH
      - name: Deploy to Staging via SSH
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            echo "Pulling latest backend image..."
            docker system prune -f
            IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/feedchain-backend
            IMAGE_TAG=${{ github.sha }}
            docker pull $IMAGE_NAME:$IMAGE_TAG

            echo "Stopping old container..."
            docker stop feedchain_backend || true
            docker rm feedchain_backend || true

            echo "Starting new container..."
            docker run -d \
              --name feedchain_backend \
              -p 8080:8080 \
              --env-file /home/${{ secrets.STAGING_USER }}/feedchain/.env \
              $IMAGE_NAME:$IMAGE_TAG

            echo "Deployment completed successfully!"
