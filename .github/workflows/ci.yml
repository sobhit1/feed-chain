name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-test-backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:8.0.15
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:7.0
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: 25
          distribution: 'temurin'
          cache: maven

      - name: Verify Maven Version
        run: mvn -v

      - name: Build, Lint & Test Backend
        working-directory: ./backend
        env:
          SPRING_DATA_MONGODB_URI: mongodb://localhost:27017/feedchain-ci
          SPRING_REDIS_HOST: localhost
          SPRING_REDIS_PORT: 6379
        run: mvn -B clean verify -DskipTests=false

      - name: Build Docker Image for Backend
        run: docker build -t feedchain-backend-ci ./backend

      - name: Verify Backend Docker Image
        run: docker images | grep feedchain-backend-ci

  build-test-frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Lint Frontend
        working-directory: ./frontend
        run: npm run lint

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build

      - name: Build Docker Image for Frontend
        run: docker build -t feedchain-frontend-ci ./frontend

      - name: Verify Frontend Docker Image
        run: docker images | grep feedchain-frontend-ci
